services:

  db:
    image: postgres:latest
    container_name: postgres
    restart: always
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

#  redis:
#    container_name: redis
#    image: redis:7-alpine
#    ports:
#      - "6379:6379"

  app:
    container_name: app
    build:
      context: .
      dockerfile: Dockerfile
    command: >
      sh -c "python manage.py migrate &&
             python manage.py collectstatic --noinput &&
             python manage.py shell < create_superuser.py &&
             uvicorn mysite.asgi:application --host 0.0.0.0 --port 8000
             "
    restart: always
    depends_on:
#      - redis
      - db
    env_file:
      - .env
    volumes:
      - ./staticfiles:/app/staticfiles
      - ./media_uploads:/app/media_uploads
    ports:
      - "8000:8000"
    logging:
      driver: loki
      options:
        loki-url: http://host.docker.internal:3100/loki/api/v1/push
        max-file: "3"
        max-size: "5 MB"

  nginx:
    container_name: nginx
    build:
      context: ./nginx
      dockerfile: Dockerfile
    ports:
      - "80:80"
    depends_on:
      - app
    volumes:
      - ./staticfiles:/app/staticfiles:ro
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro

#  grafana:
#    container_name: grafana
#    image: grafana/grafana:9.3.8
#    environment:
#      GF_AUTH_ANONYMOUS_ENABLED: "true"
#      GF_AUTH_ANONYMOUS_ORG_NAME: "Main Org."
#      GF_AUTH_ANONYMOUS_ORG_ROLE: "Admin"
#    ports:
#      - "3000:3000"
#
#  loki:
#    container_name: loki
#    image: grafana/loki:2.9.0
#    ports:
#      - "3100:3100"

#  adminer:
#    image: adminer
#    container_name: adminer
#    restart: always
#    ports:
#      - "8080:8080"
#
#  pgadmin:
#    image: dpage/pgadmin4
#    container_name: pgadmin
#    restart: always
#    environment:
#      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
#      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
#      PGADMIN_CONFIG_SERVER_MODE: 'False'
#    ports:
#      - "5050:80"
#
#    volumes:
#      - pgadmin_data:/var/lib/pgadmin

volumes:
  postgres_data:
#  pgadmin_data:
